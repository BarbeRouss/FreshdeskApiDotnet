trigger:
  branches:
    include:
      - '*'

pool:
  vmImage: 'ubuntu-latest'

variables:
  buildConfiguration: 'Release'

steps:
  - task: UseDotNet@2
    displayName: 'Install .NET Core 3.1 sdk'
    inputs:
      packageType: sdk
      version: 3.1.x
      installationPath: $(Agent.ToolsDirectory)/dotnet

  - script: export PATH="$PATH:/root/.dotnet/tools"
  - script: dotnet tool install -g dotnet-format
  - script: dotnet format --check --dry-run -v diag

  - task: DotNetCoreCLI@2
    displayName: 'Build projects'
    inputs:
      command: 'build'
      projects: 'FreshdeskApi.sln'

  - task: DotNetCoreCLI@2
    displayName: "Test"
    inputs:
      command: test
      projects: '**/*Tests/*.csproj'
      arguments: '--configuration $(buildConfiguration) /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura /p:CoverletOutput=$(Build.SourcesDirectory)\TestResults\Coverage\'

  - task: Palmmedia.reportgenerator.reportgenerator-build-release-task.reportgenerator@4
    displayName: ReportGenerator
    inputs:
      reports: '$(Build.SourcesDirectory)/TestResults/Coverage/coverage.cobertura.xml'
      targetdir: '$(Build.SourcesDirectory)/TestResults/Coverage'
      sourcedirs: '$(Build.SourcesDirectory)'

  - task: PublishCodeCoverageResults@1
    displayName: 'Publish code coverage results'
    inputs:
      codeCoverageTool: Cobertura
      summaryFileLocation: '$(Build.SourcesDirectory)/TestResults/Coverage/*cobertura.xml'
      reportDirectory: '$(Build.SourcesDirectory)/TestResults/Coverage'

  - task: NuGetCommand@2
    inputs:
      command: 'pack'
      packagesToPack: 'FreshdeskApi.Client/FreshdeskApi.Client.csproj'
      configuration: '$(buildConfiguration)'
      versioningScheme: 'byPrereleaseNumber'
      majorVersion: '1'
      minorVersion: '0'
      patchVersion: '0'